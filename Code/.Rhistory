scale_y_continuous(labels=scales::percent_format(),
expand = expansion(mult = c(0.01, 0.05))) +
scale_fill_manual(values = microbe_colors) +
labs(y = 'Relative Abundance',
tag = 'A') +
theme_classic() +
theme(legend.position = 'none',
panel.background = element_rect(colour = 'black'),
axis.ticks.y = element_line(colour = 'black'),
axis.minor.ticks.y.left = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title = element_text(colour = 'black', size = 14),
axis.text = element_text(colour = 'black', size = 10),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
))
base_plot
base_plot <- base_plot_data %>%
upset(data = .,
intersect = select(., where(is.logical)) %>% colnames,
base_annotations = list(
'Intersection size' = intersection_size(
counts = TRUE,
) +
scale_y_continuous(labels=scales::comma_format(),
expand = expansion(mult = c(0.01, 0.05))) +
labs(tag = 'B') +
theme_classic() +
theme(legend.position = 'none',
panel.background = element_rect(colour = 'black'),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title = element_text(colour = 'black', size = 14),
axis.text = element_text(colour = 'black', size = 10),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
),
annotations = list(
'Order' = ggplot(mapping = aes(fill = the_colour)) +
geom_bar(fill = 'white', colour = 'black', stat = 'count',
position = 'fill', show.legend = FALSE) +
geom_bar(stat = 'count', position = 'fill', show.legend = FALSE) +
scale_y_continuous(labels=scales::percent_format(),
expand = expansion(mult = c(0.01, 0.05))) +
scale_fill_manual(values = microbe_colors) +
labs(y = 'Relative Abundance',
tag = 'A') +
theme_classic() +
theme(legend.position = 'none',
panel.background = element_rect(colour = 'black'),
axis.ticks.y = element_line(colour = 'black'),
axis.minor.ticks.y.left = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title = element_text(colour = 'black', size = 14),
axis.text = element_text(colour = 'black', size = 10),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
),
sort_sets = FALSE,
set_sizes=(
upset_set_size(geom = geom_bar(fill = c('gray65', 'gray65', '#F21A00', '#3B9AB2', 'purple', 'purple')),
position = 'right') + #'gray65'
geom_text(aes(label = after_stat(count)), hjust = 1.1, stat = 'count',
colour = 'white', fontface = 'bold', size = 4) +
# + annotate(geom='text', label='@', x='Drama', y=850, color='white', size=3) +
# expand_limits(y = 200) +
labs(tag = 'D') +
theme_classic() +
theme(panel.background = element_rect(colour = 'black'),
axis.ticks.x = element_line(colour = 'black'),
axis.title = element_text(colour = 'black', size = 14),
axis.text.x = element_text(angle = 0,  colour = 'black', size = 10),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
))
base_plot_data
base_plot
base_plot <- base_plot_data %>%
upset(data = .,
intersect = select(., where(is.logical)) %>% colnames,
base_annotations = list(
'Intersection size' = intersection_size(
counts = TRUE,
) +
scale_y_continuous(labels=scales::comma_format(),
expand = expansion(mult = c(0.01, 0.05))) +
labs(tag = 'B') +
theme_classic() +
theme(legend.position = 'none',
panel.background = element_rect(colour = 'black'),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title = element_text(colour = 'black', size = 14),
axis.text = element_text(colour = 'black', size = 10),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
),
annotations = list(
'Order' = ggplot(mapping = aes(fill = the_colour)) +
geom_bar(fill = 'white', colour = 'black', stat = 'count',
position = 'fill', show.legend = FALSE) +
geom_bar(stat = 'count', position = 'fill', show.legend = FALSE) +
scale_y_continuous(labels=scales::percent_format(),
expand = expansion(mult = c(0.01, 0.05))) +
scale_fill_manual(values = microbe_colors) +
labs(y = 'Relative Abundance',
tag = 'A') +
theme_classic() +
theme(legend.position = 'none',
panel.background = element_rect(colour = 'black'),
axis.ticks.y = element_line(colour = 'black'),
axis.minor.ticks.y.left = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title = element_text(colour = 'black', size = 14),
axis.text = element_text(colour = 'black', size = 10),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
),
sort_sets = FALSE,
# set_sizes=(
#   upset_set_size(geom = geom_bar(fill = c('gray65', 'gray65', '#F21A00', '#3B9AB2', 'purple', 'purple')),
#                  position = 'right') + #'gray65'
#     geom_text(aes(label = after_stat(count)), hjust = 1.1, stat = 'count',
#               colour = 'white', fontface = 'bold', size = 4) +
#     # + annotate(geom='text', label='@', x='Drama', y=850, color='white', size=3) +
#     # expand_limits(y = 200) +
#     labs(tag = 'D') +
#     theme_classic() +
#     theme(panel.background = element_rect(colour = 'black'),
#           axis.ticks.x = element_line(colour = 'black'),
#           axis.title = element_text(colour = 'black', size = 14),
#           axis.text.x = element_text(angle = 0,  colour = 'black', size = 10),
#           axis.title.y = element_blank(),
#           axis.text.y = element_blank(),
#           axis.ticks.y = element_blank(),
#           plot.tag = element_text(colour = 'black', size = 18,
#                                   face = 'bold', hjust = 0))
# ),
matrix = (
intersection_matrix() +
labs(tag = 'C') +
theme_classic()
),
# sort_intersections=FALSE,
# intersections=list(c('Healthy', 'Time'),
#                    'Healthy',
#                    c('Disease', 'Time'),
#                    'Disease',
#                    'Time',
#                    'Outside of known sets'),
name = NULL,
themes = upset_modify_themes(list('intersections_matrix' = theme(axis.text.y = element_text(color = c('black', 'black', '#F21A00', '#3B9AB2', 'purple', 'purple'),
size = 14, face = 'bold'),
panel.background = element_rect(colour = 'black'),
panel.border = element_rect(colour = 'black', fill = 'transparent'),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0),
axis.ticks = element_line(colour = 'black'),
axis.line = element_line(colour = "black",
linewidth = rel(1))))),
upset_stripes(colors = NA)
)
ggdraw(base_plot) +
draw_plot(colour_options$legend,
x = 0.75, y = 0.25, width = 0.25, height = 0.75)
base_plot <- base_plot_data %>%
upset(data = .,
intersect = select(., where(is.logical)) %>% colnames,
base_annotations = list(
'Intersection size' = intersection_size(
counts = TRUE,
) +
scale_y_continuous(labels=scales::comma_format(),
expand = expansion(mult = c(0.01, 0.05))) +
labs(tag = 'B') +
theme_classic() +
theme(legend.position = 'none',
panel.background = element_rect(colour = 'black'),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title = element_text(colour = 'black', size = 14),
axis.text = element_text(colour = 'black', size = 10),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
),
annotations = list(
'Order' = ggplot(mapping = aes(fill = the_colour)) +
geom_bar(fill = 'white', colour = 'black', stat = 'count',
position = 'fill', show.legend = FALSE) +
geom_bar(stat = 'count', position = 'fill', show.legend = FALSE) +
scale_y_continuous(labels=scales::percent_format(),
expand = expansion(mult = c(0.01, 0.05))) +
scale_fill_manual(values = microbe_colors) +
labs(y = 'Relative Abundance',
tag = 'A') +
theme_classic() +
theme(legend.position = 'none',
panel.background = element_rect(colour = 'black'),
axis.ticks.y = element_line(colour = 'black'),
axis.minor.ticks.y.left = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title = element_text(colour = 'black', size = 14),
axis.text = element_text(colour = 'black', size = 10),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
),
sort_sets = FALSE,
set_sizes=(
upset_set_size(geom = geom_bar(fill = c('gray65', '#F21A00', '#3B9AB2', 'purple', 'purple')),
position = 'right') + #'gray65'
geom_text(aes(label = after_stat(count)), hjust = 1.1, stat = 'count',
colour = 'white', fontface = 'bold', size = 4) +
# + annotate(geom='text', label='@', x='Drama', y=850, color='white', size=3) +
# expand_limits(y = 200) +
labs(tag = 'D') +
theme_classic() +
theme(panel.background = element_rect(colour = 'black'),
axis.ticks.x = element_line(colour = 'black'),
axis.title = element_text(colour = 'black', size = 14),
axis.text.x = element_text(angle = 0,  colour = 'black', size = 10),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
),
matrix = (
intersection_matrix() +
labs(tag = 'C') +
theme_classic()
),
# sort_intersections=FALSE,
# intersections=list(c('Healthy', 'Time'),
#                    'Healthy',
#                    c('Disease', 'Time'),
#                    'Disease',
#                    'Time',
#                    'Outside of known sets'),
name = NULL,
themes = upset_modify_themes(list('intersections_matrix' = theme(axis.text.y = element_text(color = c('black', 'black', '#F21A00', '#3B9AB2', 'purple', 'purple'),
size = 14, face = 'bold'),
panel.background = element_rect(colour = 'black'),
panel.border = element_rect(colour = 'black', fill = 'transparent'),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0),
axis.ticks = element_line(colour = 'black'),
axis.line = element_line(colour = "black",
linewidth = rel(1))))),
upset_stripes(colors = NA)
)
ggdraw(base_plot) +
draw_plot(colour_options$legend,
x = 0.75, y = 0.25, width = 0.25, height = 0.75)
base_plot <- base_plot_data %>%
upset(data = .,
intersect = select(., where(is.logical)) %>% colnames,
base_annotations = list(
'Intersection size' = intersection_size(
counts = TRUE,
) +
scale_y_continuous(labels=scales::comma_format(),
expand = expansion(mult = c(0.01, 0.05))) +
labs(tag = 'B') +
theme_classic() +
theme(legend.position = 'none',
panel.background = element_rect(colour = 'black'),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title = element_text(colour = 'black', size = 14),
axis.text = element_text(colour = 'black', size = 10),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
),
annotations = list(
'Order' = ggplot(mapping = aes(fill = the_colour)) +
geom_bar(fill = 'white', colour = 'black', stat = 'count',
position = 'fill', show.legend = FALSE) +
geom_bar(stat = 'count', position = 'fill', show.legend = FALSE) +
scale_y_continuous(labels=scales::percent_format(),
expand = expansion(mult = c(0.01, 0.05))) +
scale_fill_manual(values = microbe_colors) +
labs(y = 'Relative Abundance',
tag = 'A') +
theme_classic() +
theme(legend.position = 'none',
panel.background = element_rect(colour = 'black'),
axis.ticks.y = element_line(colour = 'black'),
axis.minor.ticks.y.left = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.title = element_text(colour = 'black', size = 14),
axis.text = element_text(colour = 'black', size = 10),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
),
sort_sets = FALSE,
set_sizes=(
upset_set_size(geom = geom_bar(fill = c('gray65', 'gray65', '#F21A00', '#3B9AB2', 'purple')),
position = 'right') + #'gray65'
geom_text(aes(label = after_stat(count)), hjust = 1.1, stat = 'count',
colour = 'white', fontface = 'bold', size = 4) +
# + annotate(geom='text', label='@', x='Drama', y=850, color='white', size=3) +
# expand_limits(y = 200) +
labs(tag = 'D') +
theme_classic() +
theme(panel.background = element_rect(colour = 'black'),
axis.ticks.x = element_line(colour = 'black'),
axis.title = element_text(colour = 'black', size = 14),
axis.text.x = element_text(angle = 0,  colour = 'black', size = 10),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0))
),
matrix = (
intersection_matrix() +
labs(tag = 'C') +
theme_classic()
),
# sort_intersections=FALSE,
# intersections=list(c('Healthy', 'Time'),
#                    'Healthy',
#                    c('Disease', 'Time'),
#                    'Disease',
#                    'Time',
#                    'Outside of known sets'),
name = NULL,
themes = upset_modify_themes(list('intersections_matrix' = theme(axis.text.y = element_text(color = c('black', 'black', '#F21A00', '#3B9AB2', 'purple', 'purple'),
size = 14, face = 'bold'),
panel.background = element_rect(colour = 'black'),
panel.border = element_rect(colour = 'black', fill = 'transparent'),
plot.tag = element_text(colour = 'black', size = 18,
face = 'bold', hjust = 0),
axis.ticks = element_line(colour = 'black'),
axis.line = element_line(colour = "black",
linewidth = rel(1))))),
upset_stripes(colors = NA)
)
ggdraw(base_plot) +
draw_plot(colour_options$legend,
x = 0.75, y = 0.25, width = 0.25, height = 0.75)
ggsave('../Results/asv_upset.png',
height = 12, width = 10, bg = 'white')
base_plot_data
filter(base_plot_data, str_detect(the_colour, 'Other'))
#### Libraries ####
library(tidyverse)
library(vegan)
#### Data ####
tank_data_cpm <- read_csv('../intermediate_files/normalized_tank_asv_counts.csv',
show_col_types = FALSE) %>%
select(asv_id, sample_id, log2_cpm_norm) %>%
pivot_wider(names_from = asv_id, values_from = log2_cpm_norm)
tank_metadata <- read_csv('../intermediate_files/normalized_tank_asv_counts.csv',
show_col_types = FALSE) %>%
select(sample_id, plate:norm.factors) %>%
distinct %>%
mutate(time_treat = str_c(anti, exposure, time, sep = '_'))
tank_metadata
read_csv('../intermediate_files/normalized_tank_asv_counts.csv',
show_col_types = FALSE)
#### Data ####
tank_data_cpm <- read_csv('../intermediate_files/normalized_tank_asv_counts.csv',
show_col_types = FALSE) %>%
filter(exposure == 'D') %>%
select(asv_id, sample_id, log2_cpm_norm) %>%
pivot_wider(names_from = asv_id, values_from = log2_cpm_norm)
#### Data ####
tank_data_cpm <- read_csv('../intermediate_files/normalized_tank_asv_counts.csv',
show_col_types = FALSE) %>%
filter(exposure == 'D') %>%
select(asv_id, sample_id, log2_cpm_norm) %>%
pivot_wider(names_from = asv_id, values_from = log2_cpm_norm)
tank_metadata <- read_csv('../intermediate_files/normalized_tank_asv_counts.csv',
show_col_types = FALSE) %>%
filter(exposure == 'D') %>%
select(sample_id, plate:norm.factors) %>%
distinct %>%
mutate(anti = factor(anti, levels = c('N', 'A')),
exposure = factor(exposure, levels = c('N', 'D')),
health = factor(health, levels = c('H', 'D')),
time_fac = factor(time_fac, levels = c('before', 'after'))) %>%
select(-time) %>%
rename(time = time_fac)
tank_metadata
if(!file.exists('../intermediate_files/taxonomy.csv.gz')){
taxonomy <- read_csv('../intermediate_files/normalized_tank_asv_counts.csv',
show_col_types = FALSE) %>%
select(asv_id, domain:species) %>%
distinct %>%
mutate(across(everything(), str_replace_na)) %>%
write_csv('../intermediate_files/taxonomy.csv.gz')
} else {
taxonomy <- read_csv('../intermediate_files/taxonomy.csv.gz',
show_col_types = FALSE) %>%
mutate(across(everything(), str_replace_na))
}
library(parallel)
clus <- makeCluster(detectCores() - 1)
clusterEvalQ(clus, library(vegan))
adon_y_data <- column_to_rownames(tank_data_cpm, 'sample_id')
the_adonis <- adonis2(vegdist(adon_y_data, binary = FALSE, method = 'bray') ~
time * exposure * anti,
permutations = 9999, by = 'terms',
data = tank_metadata, parallel = clus)
stopCluster(cl = clus)
write_rds(the_adonis, '../intermediate_files/adonis.rds.gz')
the_adonis <- adonis2(vegdist(adon_y_data, binary = FALSE, method = 'bray') ~
time * health * anti,
permutations = 9999, by = 'terms',
data = tank_metadata, parallel = clus)
clus <- makeCluster(detectCores() - 1)
clusterEvalQ(clus, library(vegan))
adon_y_data <- column_to_rownames(tank_data_cpm, 'sample_id')
the_adonis <- adonis2(vegdist(adon_y_data, binary = FALSE, method = 'bray') ~
time + health + anti,
permutations = 9999, by = 'terms',
data = tank_metadata, parallel = clus)
stopCluster(cl = clus)
write_rds(the_adonis, '../intermediate_files/adonis.rds.gz')
the_adonis
library(parallel)
clus <- makeCluster(detectCores() - 1)
clusterEvalQ(clus, library(vegan))
the_nmds <- column_to_rownames(tank_data_cpm, 'sample_id') %>%
metaMDS(distance = 'bray', binary = FALSE, trymax = 1000,
parallel = clus)
stopCluster(cl = clus)
write_rds(the_nmds, '../intermediate_files/field_tank_nmds.rds.gz')
scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = exposure, shape = anti)) +
geom_point() +
facet_wrap(~tank)
scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = exposure, shape = anti)) +
geom_point()
scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = exposure, shape = anti)) +
geom_point(size = 3)
scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = health, shape = anti)) +
geom_point(size = 3)
scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = health)) +
geom_point(size = 3)
scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = time)) +
geom_point(size = 3)
scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = anti)) +
geom_point(size = 3)
health_plot <- scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = health)) +
geom_point(size = 3)
time_plot <- scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = time)) +
geom_point(size = 3)
anti_plot scores(the_nmds)$sites %>%
health_plot <- scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = health)) +
geom_point(size = 3)
time_plot <- scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = time)) +
geom_point(size = 3)
anti_plot <- scores(the_nmds)$sites %>%
as_tibble(rownames = 'sample_id') %>%
left_join(tank_metadata, by = 'sample_id') %>%
ggplot(aes(x = NMDS1, y = NMDS2, colour = anti)) +
geom_point(size = 3)
library(patchwork)
health_plot + time_plot + anti_plot
health_plot + time_plot + anti_plot
ggsave('../Results/nmds_plots.png')
